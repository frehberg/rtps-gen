/*
 * Distributed under the Apache License.
 * See: https://github.com/frehberg/rtps-gen/blob/master/LICENSE
 */

#ifndef DDS_DCPS_TYPE_SUPPORT_IDL
#define DDS_DCPS_TYPE_SUPPORT_IDL

#include "dds/DdsDcpsTopic.idl"
#include "dds/DdsDcpsPublication.idl"
#include "dds/DdsDcpsSubscription.idl"


module DDS {
  module DCPS {

    local interface TypeSupport : ::DDS::TypeSupport {

      /**
      * create and activate a FooDataWriter.
      * Implemented by FooTypeSupportImpl.
      * Publisher::create_datawriter() will set the topic, listener, qos and
      * other initialization so the implementation of this method
      * is as small and simple as possible.
      */
      ::DDS::DataWriter create_datawriter();

      /**
      * create and activate a FooDataReader.
      * Implemented by FooTypeSupportImpl.
      * Subscriber::create_datareader() will set the topic, listener, qos and
      * other initialization so the implementation of this method
      * is as small and simple as possible.
      */
      ::DDS::DataReader create_datareader();

  #ifndef DDS_NO_MULTI_TOPIC
      ::DDS::DataReader create_multitopic_datareader();
  #endif

      boolean has_dcps_key();
    };
  };
};

#endif /* DDS_DCPS_TYPE_SUPPORT_IDL */
